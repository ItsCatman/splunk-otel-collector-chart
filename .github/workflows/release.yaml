name: Release Charts

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  maybe_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if the release is needed
        id: check_update_chart
        run: |
          LATEST_VERSION=$(curl -s https://signalfx.github.io/splunk-otel-collector-chart/index.yaml | yq e '.entries["splunk-otel-collector"][0].version')
          CURRENT_VERSION=$(yq e '.version' helm-charts/splunk-otel-collector/Chart.yaml)
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "New release needed, creating..."
            echo "NEED_RELEASE=1" >> $GITHUB_OUTPUT
          else
            echo "No new release needed"
            echo "NEED_RELEASE=0" >> $GITHUB_OUTPUT
          fi
          exit 0

      - name: Check last workflow run status on main
        id: check_main_status
        run: |
          end=$((SECONDS+900)) // 15 minutes
          while [ $SECONDS -lt $end ]; do
            STATUS=$(gh run list --branch main --limit 1 --json status,conclusion --jq '.[0].status')
            CONCLUSION=$(gh run list --branch main --limit 1 --json status,conclusion --jq '.[0].conclusion')
            if [ "$STATUS" == "completed" ]; then
              if [ "$CONCLUSION" == "success" ]; then
                echo "The last workflow run on main was successful."
                exit 0
              else
                echo "The last workflow run on main was not successful. Blocking release."
                exit 1
              fi
            fi
            echo "The last workflow run on main is still in progress. Waiting..."
            sleep 30
          done
          echo "The last workflow run on main did not complete within the timeour. Please try create the release after the run completes."
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.check_update_chart.outputs.NEED_RELEASE == 1 }}

      - name: Configure Git
        run: git config user.name "$GITHUB_ACTOR" && git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        if: ${{ steps.check_update_chart.outputs.NEED_RELEASE == 1 }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.11.3
        if: ${{ steps.check_update_chart.outputs.NEED_RELEASE == 1 }}

      - name: Set up chart dependencies
        run: make render
        if: ${{ steps.check_update_chart.outputs.NEED_RELEASE == 1 }}

      - name: Generate Release Notes
        run: make chlog-release-notes OUTPUT=file
        if: ${{ steps.check_update_chart.outputs.NEED_RELEASE == 1 }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: helm-charts
          config: .github/workflows/configs/cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        if: ${{ steps.check_update_chart.outputs.NEED_RELEASE == 1 }}
